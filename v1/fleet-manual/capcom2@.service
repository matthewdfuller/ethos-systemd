[Unit]
Description=Capcom2/{HAProxy NGinx} @ %i
After=docker.service
Requires=docker.service

[Service]
User=core
Restart=on-failure
RestartSec=20
TimeoutStartSec=0
EnvironmentFile=/etc/environment
Environment="IMAGE=etcdctl -u $ETCDCTL_READ_USER:$ETCDCTL_READ_PASSWORD get /images/capcom2"
ExecStartPre=/usr/bin/sh -c "source /etc/profile.d/etcdctl.sh && docker pull $($IMAGE)"
ExecStartPre=-/usr/bin/docker kill capcom2
ExecStartPre=-/usr/bin/docker rm capcom2
# NOTE: it's critical to source the etcdctl.sh file so that etcd connects to the correct cluster.
ExecStart=/usr/bin/sh -c "source /etc/profile.d/etcdctl.sh && \
  docker run \
    --name capcom2 \
    --net='host' \
    --privileged \
    -e LOG_APP_NAME=capcom \
    -e CP_APPLICATIONS=$(etcdctl -u $ETCDCTL_READ_USER:$ETCDCTL_READ_PASSWORD get /capcom/config/applications) \
    -e CP_HOST=`etcdctl -u $ETCDCTL_READ_USER:$ETCDCTL_READ_PASSWORD get /CP/CP_HOST` \
    -e CP_HOST=$(etcdctl -u $ETCDCTL_READ_USER:$ETCDCTL_READ_PASSWORD get /capcom/config/host) \
    -e CP_KV_STORE_SERVER_ADDRESS=$(etcdctl -u $ETCDCTL_READ_USER:$ETCDCTL_READ_PASSWORD get /capcom/config/kv-store-server-address) \
    -e CP_KV_TTL=$(etcdctl -u $ETCDCTL_READ_USER:$ETCDCTL_READ_PASSWORD get /capcom/config/kv-ttl) \
    -e CP_LOG_LEVEL=$(etcdctl -u $ETCDCTL_READ_USER:$ETCDCTL_READ_PASSWORD get /capcom/config/log-level) \
    -e CP_LOG_LOCATION=$(etcdctl -u $ETCDCTL_READ_USER:$ETCDCTL_READ_PASSWORD get /capcom/config/log-location) \
    -e CP_PORT=$(`etcdctl -u $ETCDCTL_READ_USER:$ETCDCTL_READ_PASSWORD get /capcom/config/port` + 1) \
    -e CP_PROXY=$(etcdctl -u $ETCDCTL_READ_USER:$ETCDCTL_READ_PASSWORD get /capcom/config/proxy) \
    -e CP_PROXY_CONFIG_FILE=$(etcdctl -u $ETCDCTL_READ_USER:$ETCDCTL_READ_PASSWORD get /capcom/config/proxy-config-file) \
    -e CP_PROXY_ENABLED=$(etcdctl -u $ETCDCTL_READ_USER:$ETCDCTL_READ_PASSWORD get /capcom/config/proxy-enabled) \
    -e CP_PROXY_RESTART_SCRIPT=$(etcdctl -u $ETCDCTL_READ_USER:$ETCDCTL_READ_PASSWORD get /capcom/config/proxy-restart-script) \
    -e CP_PROXY_TIMEOUT=$(etcdctl -u $ETCDCTL_READ_USER:$ETCDCTL_READ_PASSWORD get /capcom/config/proxy-timeout) \
    $($IMAGE)"
ExecStop=/usr/bin/docker stop capcom2

[Install]
WantedBy=multi-user.target

[X-Fleet]
Global=false
MachineMetadata=role=proxy
MachineMetadata=ip=%i
