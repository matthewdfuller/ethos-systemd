[Unit]
Description=Booster Worker
Requires=docker.service
After=docker.service

[Service]
User=core
Restart=on-failure
EnvironmentFile=/etc/environment
Environment="IMAGE=/home/core/ethos-systemd/v1/lib/etcdauth.sh get /images/booster"

ExecStartPre=/usr/bin/bash -c "[ -f /home/core/.dockercfg ] || exit 1"
ExecStartPre=/usr/bin/bash -c "[ -f /opt/mesos/credentials ] || exit 1"
ExecStartPre=/usr/bin/sh -c ". /etc/profile.d/etcdctl.sh && docker pull $($IMAGE)"

# mkdir so `etcdctl ls /booster/nodes` below doesn't fail
ExecStartPre=-/usr/bin/sh -c ". /etc/profile.d/etcdctl.sh && etcdctl mkdir /booster/nodes"

ExecStartPre=-/usr/bin/docker kill booster
ExecStartPre=-/usr/bin/docker rm booster
ExecStart=/usr/bin/sh -c ". /etc/profile.d/etcdctl.sh && /usr/bin/docker run \
  --name booster \
  --net=host \
  -e BOOSTER_ENABLED=$(/home/core/ethos-systemd/v1/lib/etcdauth.sh get /booster/config/enabled) \
  -e BOOSTER_NODES=$(/home/core/ethos-systemd/v1/lib/etcdauth.sh ls /booster/nodes | cut -d'/' --complement -s -f-3 | tr '\n' ',') \
  -e BOOSTER_ROLES=mesos_agent \
  $($IMAGE)"

ExecStop=-/usr/bin/docker stop booster

[Install]
WantedBy=multi-user.target

[X-Fleet]
Global=true
MachineMetadata=role=worker
