[Unit]
Description=Booster Control
Requires=docker.service
After=docker.service

[Service]
User=core
Restart=on-failure
EnvironmentFile=/etc/environment
Environment="IMAGE=/home/core/ethos-systemd/v1/lib/etcdauth.sh get /images/booster"

ExecStartPre=/usr/bin/sh -c "/usr/bin/docker pull $($IMAGE)"

# mkdir so `etcdctl ls /booster/nodes` below doesn't fail
ExecStartPre=-/usr/bin/sh -c "/home/core/ethos-systemd/v1/lib/etcdauth.sh mkdir /booster/nodes"

# Set our internal hostname minus .ec2.internal so
# ip-123.456.789.123.ec2.internal becomes ip-123.456.789.123 which is what
# inet:gethostname() reports
#
# This is only done for control tier nodes because they're expected to stick
# around and epmd will create a full mesh without explicity registering worker
# nodes
ExecStartPre=/usr/bin/sh -c "/home/core/ethos-systemd/v1/lib/etcdauth.sh set /booster/nodes/$(echo %H | cut -d'.' --complement -s -f2-) true"

ExecStartPre=-/usr/bin/docker kill booster
ExecStartPre=-/usr/bin/docker rm booster
ExecStart=/usr/bin/sh -c "/usr/bin/docker run \
  --name booster \
  --net=host \
  -e BOOSTER_ROLES=control_tier \
  -e BOOSTER_ENABLED=$(/home/core/ethos-systemd/v1/lib/etcdauth.sh get /booster/config/enabled) \
  -e BOOSTER_NODES=$(/home/core/ethos-systemd/v1/lib/etcdauth.sh ls /booster/nodes | cut -d'/' --complement -s -f-3 | tr '\n' ',') \
  $($IMAGE)"

ExecStop=-/usr/bin/docker stop booster

[Install]
WantedBy=multi-user.target

[X-Fleet]
Global=true
MachineMetadata=role=control
