[Unit]
Description=Booster Sidekick Control
Requires=docker.service
After=docker.service

[Service]
User=core
Restart=on-failure
Environment="IMAGE=etcdctl get /images/booster-sidekick"

ExecStartPre=/usr/bin/sh -c "/usr/bin/docker pull $($IMAGE)"

ExecStartPre=-/usr/bin/docker kill booster-sidekick
ExecStartPre=-/usr/bin/docker rm booster-sidekick
ExecStart=/usr/bin/sh -c "/usr/bin/docker run \
  -e DB_DATABASE=booster \
  -e DB_ENGINE=`etcdctl get /flight-director/config/db-engine` \
  -e DB_PASSWORD=`etcdctl get /environment/RDSPASSWORD` \
  -e DB_HOST=`etcdctl get /flight-director/config/db-path` \
  -e DB_USERNAME=`etcdctl get /flight-director/config/db-username` \
  -e PORT=2043 \
  -p 2043:2043 \
  --name booster-sidekick \
  $($IMAGE)"

ExecStop=-/usr/bin/docker stop booster-sidekick

[Install]
WantedBy=multi-user.target

[X-Fleet]
Global=true
MachineMetadata=role=control
